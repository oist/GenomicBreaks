% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flagPairs.R
\name{flagPairs}
\alias{flagPairs}
\title{Flag successive entries of a \code{GBreaks} object}
\usage{
flagPairs(gb)
}
\arguments{
\item{gb}{A \code{GBreaks()} object.}
}
\value{
Returns the \code{GBreaks} object with an extra \code{pairs} metadata column.
This \code{pairs} column is a factor of all flags, so that \code{table(gb$pairs)}
always returns a vector of the same length, reporting \code{0} when necessary.
This allows to easily aggregate results from multiple objects.
}
\description{
Scans a sorted \code{\link{GBreaks}} object and issues a flag describing the relation
between the current entry and the next entry.
}
\details{
Because the object is sorted, the next entry on the \emph{target} genome is by
definition following the current one unless the end of the sequence feature
(contig, scaffold, â€¦) is reached.  The two \emph{target} ranges can be on the
same strand or on opposite strands.  No difference is made between \verb{+/-}
and \verb{-/+} orientations because it will be arbitrary unless the sequence
features of both genomes are oriented, as in the case of comparing
chromosomal assemblies of related species.

Depending on whether the \emph{query} ranges precede or follow each other, or
are not next to each other, and depending on the strand of the alignments,
a flag is issued on the current entry.  \code{Col} signals colinearity with the
next entry, \code{Inv} an inversion on either entry, \code{Flp} signals that the order
of the entries is as if one hand jumped over the other one.  When the \emph{query}
ranges are not next to each other, a \code{Scr} flag, for \emph{scrambled}, is issued.
Lastly, \code{Bnd} (for \emph{boundary}) signals that there is no pair to analyse
because the current entry is the last one for the current sequence level on
the \emph{target} genome.
}
\examples{
flagPairs(exampleInversion)
flagPairs(exampleTranslocation)

# How the pair classes are defined:
GenomicBreaks:::allPossiblePairClasses

}
\seealso{
Other Flagging functions: 
\code{\link{flagAll}()},
\code{\link{flagColinearAlignments}()},
\code{\link{flagDoubleInversions}()},
\code{\link{flagInversions}()},
\code{\link{flagLongShort}()},
\code{\link{flagTranslocations}()}

Other Inversion functions: 
\code{\link{filterDoubleInversions}()},
\code{\link{filterInversions}()},
\code{\link{flagDoubleInversions}()},
\code{\link{flagInversions}()},
\code{\link{flipInversions}()},
\code{\link{leftInversionGaps}()},
\code{\link{removeInversions}()},
\code{\link{showInversions}()}

Other Colinearity functions: 
\code{\link{GOC}()},
\code{\link{bridgeRegions}()},
\code{\link{chain_contigs}()},
\code{\link{coalesce_contigs}()},
\code{\link{dist2next}()},
\code{\link{filterColinearRegions}()},
\code{\link{flagColinearAlignments}()}

Other Structural variants: 
\code{\link{StructuralVariants}},
\code{\link{flagDoubleInversions}()},
\code{\link{flagInversions}()},
\code{\link{flagTranslocations}()},
\code{\link{plotApairOfChrs}()}
}
\concept{Colinearity functions}
\concept{Flagging functions}
\concept{Inversion functions}
\concept{Structural variants}
